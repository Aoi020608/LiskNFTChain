Big O

O(n!) -> O(2 ^ n) -> O(n ^ 2) -> O(n log n) -> O(n) -> O(log n), O(1)

Good code - readable, scalable

Scalable code 

Big O notation is the language we use for talking about how long an algorithm takes to run.

## O(n)
- linear time
- 

## O(1)
- constant time
- stays flat

Rule Book
1. Rule 1: Worst Case

2. Rule 2: Remove Constants
- 

3. Rule 3: Different terms for inputs
// Log all pairs of array
nested loop - O(n + n) -> O(n ^ 2)
quadratic 

4. Drop Non Dominants

